version: '3.4'
services:
    redis:
        image: redis:alpine
        ports:
          - "6379"
        networks:
            - frontend
        deploy:
          replicas: 2
          update_config:
             parallelism: 2
             delay: 10s
          restart_policy:
            condition: on-faliure
              
    db:
        image: postgres:9.6
        volumes:
            - db-data:/var/lib/postgresql/data
        networks:
            - backend
        deploy:
          placement:
             constrains: [node.role == manager]
    vote:
        image: dockersamples/examplevotingapp_vote:before
        ports:
            - '5000:80'
        networks:
            - frontend
        deploy:
            mode: global
    result:
        image: dockersamples/examplevotingapp_result:before
        ports:
            - '5001:80'
        networks:
            - backend
        depends_on:
            db
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
                restart_policy:
                    condition : on-faliure
    worker:
        image: dockersamples/examplevotingapp_worker:worker
        networks:
            - frontend
            - backend
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=VOTING]
      retart_policy:
        condition: on-faliure
        delay: 10s
        max_attempt: 3
        window: 12s
    placement:
        constraints: [node.role == manager]
 
       
networks:
    frontend:
    backend:
volumes:
    db-data:

